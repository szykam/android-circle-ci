apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "pl.skamycki.circleci"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 13
        versionName "0.2.7"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                FABRIC_API_KEY: "64b08e9bac9c936fc71187d12d64608ed9b2204c",
        ]
    }
    signingConfigs {
        release {
            storeFile file("../release-key.jks")
            storePassword getEnv("RELEASE_KEY_PASSWORD")
            keyAlias "release"
            keyPassword getEnv("RELEASE_KEY_PASSWORD")
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "stage"

    productFlavors {
        beta {
            dimension "stage"
            applicationIdSuffix ".beta"
            ext.betaDistributionGroupAliases = "development"
        }

        prod {
            dimension "stage"
            ext.betaDistributionGroupAliases = "production"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0-alpha3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.2@aar') {
        transitive = true
    }
    compile('com.crashlytics.sdk.android:answers:1.4.2@aar') {
        transitive = true;
    }

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def getEnv(String key) {
    def envValue = System.getenv(key)
    if (envValue != null) return envValue

    try {
        return project.property(key)
    } catch (MissingPropertyException ignored) {
        return ""
    }
}
