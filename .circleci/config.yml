version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms1024m -Xmx1536m -XX:MaxMetaspaceSize=1536m"
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dkotlin.incremental=false -DdisablePreDex'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run all checks
          command: ./gradlew clean test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - save_cache:
          paths:
            - ~/
          key: build-{{ .Environment.CIRCLE_SHA1 }}
  deploy_beta:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Assemble release APK
          command: ./gradlew assembleBetaRelease
      - run:
          name: Upload to Beta
          command: ./gradlew crashlyticsUploadDistributionBetaRelease
  deploy_prod:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Assemble release APK
          command: ./gradlew assembleProdRelease
      - run:
          name: Upload to Beta
          command: ./gradlew assembleProdRelease crashlyticsUploadDistributionProdRelease
workflows:
  version: 2
  build-test:
    jobs:
      - build:
          filters:
            branches:
              only: develop
  build-and-deploy-beta:
    jobs:
      - build
      - deploy_beta:
          filters:
            branches:
              only: /release.*/
          type: approval
          requires:
            - build
  build-and-deploy-prod:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - deploy_beta:
          requires:
            - build
